/*
Let f(n, d) is number of passwords of n digits long and end with d
f(1, d) = 1 (0 <= d <= 9)
f(n, 0) = f(n - 1, 3)
f(n, 1) = f(n - 1, 2) + f(n - 1, 4)
f(n, 2) = f(n - 1, 1) + f(n - 1, 3) + f(n - 1, 5)
f(n, 3) = f(n - 1, 0) + f(n - 1, 2) + f(n - 1, 6)
f(n, 4) = f(n - 1, 1) + f(n - 1, 5) + f(n - 1, 7)
f(n, 5) = f(n - 1, 2) + f(n - 1, 4) + f(n - 1, 6) + f(n - 1, 8)
f(n, 6) = f(n - 1, 3) + f(n - 1, 5) + f(n - 1, 9)
f(n, 7) = f(n - 1, 4) + f(n - 1, 8)
f(n, 8) = f(n - 1, 5) + f(n - 1, 7) + f(n - 1, 9)
f(n, 9) = f(n - 1, 6) + f(n - 1, 8)
S(n) = sum(d = 0, 9, f(n, d))
*/


{
M = 10^9+7;
x1 = Mod([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]~, M);
A = matrix(10, 10);
A[1,4] = 1;
A[2,3] = A[2,5] = 1;
A[3,2] = A[3,4] = A[3,6] = 1;
A[4,1] = A[4,3] = A[4,7] = 1;
A[5,2] = A[5,6] = A[5,8] = 1;
A[6,3] = A[6,5] = A[6,7] = A[6,9] = 1;
A[7,4] = A[7,6] = A[7,10] = 1;
A[8,5] = A[8,9] = 1;
A[9,6] = A[9,8] = A[9,10] = 1;
A[10,7] = A[10,9] = 1;
A = Mod(A, M);
N = 10^9;
x = A^(N-1)*x1;
ans = lift(vecsum(x));
print(ans);
}
